package main

import (
	"context"
	"log"
	"net/http"
	"os"

	"github.com/akrylysov/algnhsa"
	_ "github.com/blackhorseya/petlog/api" // docs is generated by Swag CLI
	"github.com/blackhorseya/petlog/internal/config"
)

// @title PetLog API
// @version 0.1
// @description 寵物健康記錄管理系統 API

// @host localhost:8080
// @BasePath /

// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
// @description Type "Bearer" followed by a space and JWT token.
func main() {
	// Load configuration
	cfg, err := config.LoadConfig()
	if err != nil {
		log.Fatalf("Failed to load configuration: %v", err)
	}

	// Initialize API using wire
	handler, cleanup, err := initPetAPI(context.Background(), cfg)
	if err != nil {
		log.Fatalf("failed to init pet API: %v", err)
	}
	defer cleanup()

	// Check if running in Lambda environment
	if _, ok := os.LookupEnv("AWS_LAMBDA_FUNCTION_NAME"); ok {
		log.Println("Running in Lambda environment")
		algnhsa.ListenAndServe(handler, nil)
	} else {
		// Running locally
		port := cfg.ServerPort
		if port == "" {
			port = "8080" // default port
		}
		log.Printf("Server is running on port %s", port)
		if err := http.ListenAndServe(":"+port, handler); err != nil {
			log.Fatalf("listen: %s\n", err)
		}
	}
}
