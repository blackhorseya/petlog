package main

import (
	"context"
	"log"
	"net/http"
	"os"

	"github.com/akrylysov/algnhsa"
	_ "github.com/blackhorseya/petlog/api" // docs is generated by Swag CLI
	"github.com/blackhorseya/petlog/internal/config"
	"github.com/blackhorseya/petlog/pkg/contextx"
)

// @title PetLog API
// @version 0.1
// @description 寵物健康記錄管理系統 API

// @host localhost:8080
// @BasePath /

// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
// @description Type "Bearer" followed by a space and JWT token.
func main() {
	// 載入配置
	cfg, err := config.Load()
	if err != nil {
		log.Fatalf("配置載入失敗: %v", err)
	}

	// 初始化 API
	ctx := contextx.WithContext(context.Background())
	handler, cleanup, err := initPetAPI(ctx, *cfg)
	if err != nil {
		log.Fatalf("Pet API 初始化失敗: %v", err)
	}
	defer cleanup()

	// 檢查是否在 Lambda 環境中運行
	if _, ok := os.LookupEnv("AWS_LAMBDA_FUNCTION_NAME"); ok {
		log.Println("在 Lambda 環境中運行")
		algnhsa.ListenAndServe(handler, nil)
	} else {
		// 本地運行
		port := cfg.HTTP.Port
		if port == "" {
			port = "8080" // 預設端口
		}
		log.Printf("伺服器運行在端口 %s", port)
		if err := http.ListenAndServe(":"+port, handler); err != nil {
			log.Fatalf("伺服器啟動失敗: %s\n", err)
		}
	}
}
